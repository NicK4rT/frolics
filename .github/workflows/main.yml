name: Travel Post Distribution
on:
  push:
    paths: ['posts/*.json']
  workflow_call:
  workflow_dispatch:

jobs:
  distribute:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest JSON file
        id: newpost
        run: |
          # Detect the latest added/modified .json post in this commit
          file=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^posts/.*\.json$' | tail -n1)
          echo "file=$file" >> $GITHUB_OUTPUT

      - name: Read post data from JSON
        id: postdata
        uses: ActionsTools/read-json-action@main
        with:
          file_path: "${{ steps.newpost.outputs.file }}"
          
      - name: Parse post info
        id: postdata
        run: |
          title=$(jq -r '.title' "${{ steps.latest.outputs.file }}")
          description=$(jq -r '.description' "${{ steps.latest.outputs.file }}")
          images=$(jq -c '.images[:10]' "${{ steps.latest.outputs.file }}") # up to 10
          echo "title=$title" >> $GITHUB_OUTPUT
          echo "description=$description" >> $GITHUB_OUTPUT
          echo "images=$images" >> $GITHUB_OUTPUT
          echo "flight=$flight" >> $GITHUB_OUTPUT
          echo "location=$location" >> $GITHUB_OUTPUT

      - name: Post to Discord
        with:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_LEGO }}
          TITLE: ${{ steps.postdata.outputs.title }}
          DESCRIPTION: ${{ steps.postdata.outputs.description }}
          IMAGES: ${{ steps.postdata.outputs.images }}
        run: |
          embstr=""
          imgs=$(echo "$IMAGES" | jq -r '.[]')
          for img in $imgs; do
            embstr="$embstr,{\"image\":{\"url\":\"$img\"}}"
          done
          # Remove leading comma if exists
          embstr="[${embstr#,}]"

          # Compose payload
          payload=$(
            jq -n --arg title "$TITLE" --arg desc "$DESCRIPTION" --argjson embeds "$embstr" \
            '{content: ($title + "\n" + $desc), embeds: $embeds}'
          )
          curl -X POST -H "Content-Type: application/json" -d "$payload" "$DISCORD_WEBHOOK"
        
      - name: Post to Tumblr
        uses: actionslaw/tumblr-post-action@v1.2.1
        
      - name: Trigger Private Repo Update
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createDispatchEvent({
              owner: 'your-username',
              repo: 'your-private-repo',
              event_type: 'travel-post-update'
            })
